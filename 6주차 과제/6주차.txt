
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

void minmax(vector<int> arr, int& min, int&max)
{
	min = arr[0];
	max = arr[0];

    for(int i = 1; i < arr.size(); ++i)
	{
        if(arr[i] < arr[i-1])
		{
            if(arr[i] < min)
				min = arr[i];
            if(arr[i-1] > max)
				max = arr[i-1];
        }
		else
		{
            if(arr[i-1] < min)
				min = arr[i-1];
            if(arr[i] > max)
				max = arr[i];
        }
    }
}

vector<int> input_array(int len)
{
    vector<int> new_array(len);
    for (int i = 0; i < len; i++)
        cin >> new_array[i];
    return new_array;
}

int main()
{
	int testcase;

	cin >> testcase;
	for (int i = 0; i < testcase; i++)
	{
		int len;
		int min;
		int max;
		vector<int> arr;

		cin >> len;
		arr = input_array(len);
		minmax(arr, min, max);
		cout << max << ' ' << min << '\n';
	}
}

#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

int secondLargest(vector<int> num)
{
    vector<int> loser;
    int max = num[0];

    for (int i = 1; i < num.size(); ++i)
	{
        if (num[i] > max) 
		{
            loser.push_back(max);
            max = num[i];
        }
		else
            loser.push_back(num[i]);
    }
    int secondLargest = *loser.begin();
	for (auto i = loser.begin() + 1; i != loser.end(); i++)
	{
		if ((*i) > secondLargest)
			secondLargest = (*i);
	}
    return secondLargest;
}

vector<int> input_array(int len)
{
    vector<int> new_array(len);
    for (int i = 0; i < len; i++)
        cin >> new_array[i];
    return new_array;
}

int main()
{
	int testcase;

	cin >> testcase;
	for (int i = 0; i < testcase; i++)
	{
		int len;
		vector<int> arr;

		cin >> len;
		arr = input_array(len);
		cout << secondLargest(arr) << '\n';
	}
}



#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void wiggleSort(vector<int>& nums) {
    vector<int> sorted(nums);
    sort(sorted.begin(), sorted.end());
    
    int n = nums.size(), k = (n + 1) / 2, j = n;
    for (int i = 0; i < n; i++) {
        nums[i] = i & 1 ? sorted[--j] : sorted[--k];
    }
}

vector<int> input_array(int len)
{
    vector<int> new_array(len);
    for (int i = 0; i < len; i++)
        cin >> new_array[i];
    return new_array;
}

void print_array(vector<int> arr)
{
    for (int i = 0; i < arr.size(); i++)
        cout << arr[i] << ' ';
	cout << endl;
}

int main()
{
	int testcase;

	cin >> testcase;
	for (int i = 0; i < testcase; i++)
	{
		int len;
		vector<int> arr;

		cin >> len;
		arr = input_array(len);
		wiggleSort(arr);
		cout << len << endl;
		print_array(arr);
	}
}
